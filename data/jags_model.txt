
model {

### SUB-MODEL 1: AGE-SPECIFIC PREVALENCE
# Model parameters abbreviated by .age. Note: this is equivalent to likelihood-based 
# PSA, as it is technically sampling directly from an integrated pdf and is not 
# propogated into a posterior. A hyperprior is used to model population variance 
# due to no available data for each age-population.
  for (i in 1:86) {
     omega.age[i] ~ dlnorm(mu.a.log[i], prec.age[i])
    
    # Note use of pow() function, using -2 is a shorthand inverse method equivalent 
    # to (1 / x^2):
     log(prec.age[i]) <- pow(sigma.age[i], -2)
     
    # Relatively wide prior on variance for each age group. See (Gelman, 2006) on
    # half-t for variance parameters in hierarchical models.
     sigma.age[i] ~ dt(0, 1, 1)T(0, )
  }

### END OF SUB-MODEL 1.

### SUB-MODEL 2: POP. LEVEL VACCINE-EFFICACY. 
# Note: this is a Bayesian Posterior model, as it combines evidence directly via the 
# likelihood and prior. Model parameters are abbreviated by .vac.
  for (i in 1:Nstud.vac) {
    # Likelihood:
     rA.vac[i] ~ dbin(pA.vac[i], nA.vac[i])
     rB.vac[i] ~ dbin(pB.vac[i], nB.vac[i])

    # Logistic link function:
     logit(pA.vac[i]) <- mu.vac[i]
     logit(pB.vac[i]) <- mu.vac[i] + delta.vac[i]
    
    # Average effect prior for SUB-MODEL 2:
     mu.vac[i] ~ dnorm(0, 1e-4)
    # Prior for sub-model 2 (Random. pop. effect):
     delta.vac[i] ~ dt(psi.vac, prec.vac, 1) 
     # if desired can be ~ dnorm(psi.vac, prec.vac)
    
     ### Mixed predictive check for SUB-MODEL 2:
       # Predictive likelihood:
        rA.mxd[i] ~ dbin(pA.new[i], nA.vac[i])
        
       # Predictive logit link function:
        logit(pA.new[i]) <- mu.vac[i] + delta.new
               
       # Mixed predictve p-value:
        pA.mxd[i] <- step(rA.mxd[i] - rA.vac[i]) - 0.5 * equals(rA.mxd[i], rA.vac[i])

  }
  
   # Hyperpriors for SUB-MODEL 2:
    psi.vac ~ dnorm(0, 1.0e-4)
    prec.vac <- pow(tau.vac, -2)
    tau.vac ~  dt(0, 1, 1)T(0, )
  
  # Transformations for SUB-MODEL 2:
   # Convert LOR to OR
    OR.vac <- exp(psi.vac)
   # Convert OR to probability for vaccine efficacy
    pEfficacy.vac <- 1 / (1 + OR.vac)
   
     # Predicted average 
     # treatment effect:
      delta.new ~ dnorm(psi.vac, prec.vac)

### END OF SUB-MODEL 2.

### SUB-MODEL 3: CANCER PROGRESSION AND 5-YEAR SURVIVAL STAGES I-IV.
# Model parameters abbreviated by .canc. Note: this is equivalent to likelihood-based
# PSA, as it is technically sampling directly from an integrated pdf and is not 
# propogated into a posterior.

   # Distribution according to Stage:
    Stage.I.canc ~ dbeta(alpha.StageI, beta.StageI)
    Stage.II.canc ~ dbeta(alpha.StageII, beta.StageII)
    Stage.III.canc ~ dbeta(alpha.StageIII, beta.StageIII)
    StageIV.Detected ~ dbeta(alpha.StageIV, beta.StageIV)
    
   # Stage I Cervical Cancer detected 5-year Survival:
    surv.StageI_year1 ~ dbeta(alpha.StageI_YearI, beta.StageI_YearI)
    surv.StageI_year2 ~ dbeta(alpha.StageI_YearII, beta.StageI_YearII)
    surv.StageI_year3 ~ dbeta(alpha.StageI_YearIII, beta.StageI_YearIII)
    surv.StageI_year4 ~ dbeta(alpha.StageI_YearIV, beta.StageI_YearIV)
    surv.StageI_year5 ~ dbeta(alpha.StageI_YearV, beta.StageI_YearV)
   # Stage II Cervical Cancer detected 5-year Survival:
    surv.StageII_year1 ~ dbeta(alpha.StageII_YearI, beta.StageII_YearI)
    surv.StageII_year2 ~ dbeta(alpha.StageII_YearII, beta.StageII_YearII)
    surv.StageII_year3 ~ dbeta(alpha.StageII_YearIII, beta.StageII_YearIII)
    surv.StageII_year4 ~ dbeta(alpha.StageII_YearIV, beta.StageII_YearIV)
    surv.StageII_year5 ~ dbeta(alpha.StageII_YearV, beta.StageII_YearV)
   # Stage III Cervical Cancer detected 5-year Survival:
    surv.StageIII_year1 ~ dbeta(alpha.StageIII_YearI, beta.StageIII_YearI)
    surv.StageIII_year2 ~ dbeta(alpha.StageIII_YearII, beta.StageIII_YearII)
    surv.StageIII_year3 ~ dbeta(alpha.StageIII_YearIII, beta.StageIII_YearIII)
    surv.StageIII_year4 ~ dbeta(alpha.StageIII_YearIV, beta.StageIII_YearIV)
    surv.StageIII_year5 ~ dbeta(alpha.StageIII_YearV, beta.StageIII_YearV)
   # Stage IV Cervical Cancer detected 5-year Survival:
    surv.StageIV_year1 ~ dbeta(alpha.StageIV_YearI, beta.StageIV_YearI)
    surv.StageIV_year2 ~ dbeta(alpha.StageIV_YearII, beta.StageIV_YearII)
    surv.StageIV_year3 ~ dbeta(alpha.StageIV_YearIII, beta.StageIV_YearIII)
    surv.StageIV_year4 ~ dbeta(alpha.StageIV_YearIV, beta.StageIV_YearIV)
    surv.StageIV_year5 ~ dbeta(alpha.StageIV_YearV, beta.StageIV_YearV)
   
### END OF SUB-MODEL 3.

### SUB-MODEL 4: INFECTION PROGRESSION:
# Note: this is equivalent to likelihood-based PSA, as it is technically sampling directly
# from an integrated pdf and is not propogated into a posterior.

   # From HPV to Normal across age groups:
   # Note: because all other states except Death are assumed to be dependent and disjoint 
   # for regression to states normal or Infection from states LSIL & HSIL, one may calculate 
   # all other relevant states from the complement of the transitions:
    HPV_Well_15to24 ~ dbeta(alpha.HPVtoNormal_15to24, beta.HPVtoNormal_15to24)
    HPV_Well_25to29 ~ dbeta(alpha.HPVtoNormal_25to29, beta.HPVtoNormal_25to29)
    HPV_Well_30toEnd ~ dbeta(alpha.HPVtoNormal_30toPlus, beta.HPVtoNormal_30toPlus)

### END OF SUB-MODEL 4.

### SUB-MODEL 5: LSIL & HSIL PROGRESSION:
# Note: this is equivalent to likelihood-based PSA, as it is technically sampling directly
# from an integrated pdf and is not propogated into a posterior.

   # From LSIL & HSIL to Normal or Infection across age groups:
   # Note: because all other states except Death are assumed to be dependent and disjoint 
   # for regression to states normal or Infection from states LSIL & HSIL, one may calculate 
   # all other relevant states from the complement of the transitions:
    LSIL_15_34 ~ dbeta(alpha.LSIL_15to34, beta.LSIL_15to34)
    LSIL_35_85 ~ dbeta(alpha.LSIL_35to85, beta.LSIL_35to85)
    HSIL_n ~ dbeta(alpha.HSIL, beta.HSIL)

### END OF SUB-MODEL 5.

 }

