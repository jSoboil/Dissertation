
model {

# SUB-MODEL 1: AGE-SPECIFIC PREVALENCE,
  # model parameters abbreviated by .age
    # Note: equivalent to Monte Carlo PSA, as it 
    # is technically sampling directly from a prior.
  for (i in 1:10) {
    omega.age[i] ~ dlnorm(mu.a.log[i], prec.age[i])
    
    # Hyper-prior precision:
    log(prec.age[i]) <- 1 / (sigma.age[i] ^ 2)
    # Hyper-pior:
    sigma.age[i] ~ dt(0, .1, 1)T(0, )
    
  }

# SUB-MODEL 2: VACCINE-EFFICACY,
  # model parameters abbreviated by .vac
  for (i in 1:Nstud.vac) {
    # Likelihood:
    rA.vac[i] ~ dbin(pA.vac[i], nA.vac[i])
    rB.vac[i] ~ dbin(pB.vac[i], nB.vac[i])
    # Logistic function:
    logit(pA.vac[i]) <- mu.vac[i]
    logit(pB.vac[i]) <- mu.vac[i] + delta.vac[i]
    
    # Average effect prior for sub-model 2:
    mu.vac[i] ~ dnorm(0, 1e-4)
    # Prior for sub-model 2 (Random. pop. effect):
    delta.vac[i] ~ dnorm(psi.vac, prec.vac)
  }
  
  # Hyperpriors for sub-model 2:
  psi.vac ~ dnorm(0, 1.0e-4)
  prec.vac <- 1 / pow(tau.vac, 2)
  tau.vac ~ dt(0, (1 / 10000 ^ 2), 1)T(0, )
  
 # Transformations for Sub-model 2:
  # Convert LOR to OR
  OR.vac <- exp(psi.vac)
  # Convert OR to probability
  # for vaccine efficacy
  pEfficacy.vac <- 1 / (1 + OR.vac)

}

